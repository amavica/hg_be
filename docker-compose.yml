version: '3'
services:
    nginix:
        image: nginx:alpine
        volumes:
            - "./etc/nginx/default.conf:/etc/nginx/conf.d/default.conf"
            - "./api:/var/www/html"
            - "./etc/nginx/default.template.conf:/etc/nginx/conf.d/default.template"
            - "./data/nginx/log:/var/log/nginx"
        ports:
            - "8000:80"
            - "3000:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - TZ=Europe/Madrid
        command: >
            /bin/sh -c "
                ln -snf /usr/share/zoneinfo/$$TZ /etc/localtime &&
                echo $$TZ > /etc/timezone &&
                envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - php
            - mysqldb
        networks:
            - app
    php:
        image: nanoninja/php-fpm:${PHP_VERSION}
        restart: always
        environment:
            - TZ=Europe/Madrid
        volumes:
            - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
            - "./etc/php/docker.conf:/usr/local/etc/php-fpm.d/docker.conf"
            - "./api:/var/www/html"
            - "./data/symfony/log:/var/www/html/var/log"
        networks:
            - app

    composer:
        image: "composer"
        volumes:
            - "./api:/app"
        command: install
        networks:
            - app

    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - TZ=Europe/Madrid
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
        networks:
            - app

networks:
    app: